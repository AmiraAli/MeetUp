

class User < ActiveRecord::Base
attr_accessor :remember_token
validates :username,presence: true, length: { maximum: 10 }
VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
validates :email, presence: true, length: { maximum: 50 },
                    format: { with: VALID_EMAIL_REGEX },
                    uniqueness:{case_sensitive: false }
has_secure_password

 validates :password, length: { minimum: 6 }
validates :gender,presence: true
validates :age,presence: true
validates :country,presence: true
validates :city,presence: true
validates :photo,presence: true
attr_accessor :country_code


GENDERS = ["female","male"]
has_attached_file :photo
validates_attachment_content_type :photo, :content_type => ["image/jpg", "image/jpeg", "image/png", "image/gif"]
	has_many :comments
	has_many :events
	has_many :groups
	has_many :interests
	has_many :posts
	has_many :events, through: :userevent
    has_many :groups, through: :usergroup


 def User.new_token
    SecureRandom.urlsafe_base64
  end

 def remember
    self.remember_token = User.new_token
    update_attribute(:remember_digest, User.digest(remember_token))
  end


  def authenticated?(remember_token)
  return false if remember_digest.nil?
    BCrypt::Password.new(remember_digest).is_password?(remember_token)
  end

end
